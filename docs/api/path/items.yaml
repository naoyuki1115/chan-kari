paths:
  itemList:
    get:
      tags: ["item"]
      summary: Get item list
      description: Get item list
      parameters:
        - name: available
          description: Availability status of a item. If it is set, user can get the list of items available for rent.
          in: query
          schema:
            $ref: "../parameter/item.yaml#/components/parameters/rentalAvailable"
        - name: limit
          description: A limit on the number of objects to be returned. If omitted, returns an object with an upper limit of 10.
          in: query
          schema:
            $ref: "../parameter/pagination.yaml#/components/parameters/limit"
        - name: after
          description: Specifies an object ID as the cursor to be used in pagination. Objects **AFTER** this cursor are returned for the specified limit. **Only one of `after` or `before `may be used.**
          in: query
          schema:
            $ref: "../parameter/pagination.yaml#/components/parameters/after"
        - name: before
          description: Specifies an object ID as the cursor to be used in pagination. Objects **BEFORE** this cursor are returned for the specified limit. **Only one of `after` or `before `may be used.**
          in: query
          schema:
            $ref: "../parameter/pagination.yaml#/components/parameters/before"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - name
                    - status
                    - imageUrl
                  properties:
                    id:
                      $ref: "../parameter/item.yaml#/components/parameters/id"
                    name:
                      $ref: "../parameter/item.yaml#/components/parameters/name"
                    status:
                      $ref: "../parameter/item.yaml#/components/parameters/status"
                    imageUrl:
                      $ref: "../parameter/item.yaml#/components/parameters/imageUrl"
        "400":
          description: "Only either `before` or `after` can be specified"
  itemDetail:
    get:
      tags: ["item"]
      summary: Get item detail
      description: Get item detail
      parameters:
        - name: item ID
          description: item ID
          in: path
          required: true
          schema:
            $ref: "../parameter/item.yaml#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - status
                  - imageUrl
                  - description
                  - author
                  - ownerId
                  - ownerName
                properties:
                  id:
                    $ref: "../parameter/item.yaml#/components/parameters/id"
                  name:
                    $ref: "../parameter/item.yaml#/components/parameters/name"
                  status:
                    $ref: "../parameter/item.yaml#/components/parameters/status"
                  imageUrl:
                    $ref: "../parameter/item.yaml#/components/parameters/imageUrl"
                  description:
                    $ref: "../parameter/item.yaml#/components/parameters/description"
                  author:
                    $ref: "../parameter/item.yaml#/components/parameters/author"
                  ownerId:
                    $ref: "../parameter/user.yaml#/components/parameters/id"
                  ownerNickName:
                    $ref: "../parameter/user.yaml#/components/parameters/nickName"
